{"version":3,"sources":["context.js","components/AddTodo.js","components/TodoItem.js","components/TodoList.js","components/ChangeLang.js","App.js","index.js"],"names":["Context","React","createContext","AddTodo","classes","langDate","useState","value","setValue","useContext","addTodo","hideModal","className","join","onClick","event","onSubmit","preventDefault","trim","createGood","onChange","target","type","addGood","cancel","TodoItem","todo","index","removeTodo","toggleTodo","comlited","push","id","bind","checked","htmlFor","title","TodoList","props","todos","map","ChangeLang","setLangLabel","langs","el","toString","App","changeClass","localStorage","getItem","JSON","parse","setTodos","lang","setLang","setItem","stringify","Provider","length","filter","concat","Date","now","Object","keys","yourGoodsList","addInGoodsList","clear","deleteAllGoods","addNewGoods","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79ca3a4d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React from 'react'\r\nimport Context from '../context';\r\n\r\nfunction AddTodo({classes, langDate}) {\r\n\r\n    const [value, setValue] = React.useState('');\r\n\r\n    const { addTodo, hideModal } = React.useContext(Context)\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault()\r\n\r\n        if (value.trim()) {\r\n            addTodo(value)\r\n            setValue('')\r\n        }\r\n    }\r\n\r\n    return <div className={classes.join(' ')}>\r\n               <div className=\"modal-hide\" onClick={event => hideModal()}></div>\r\n               <form className=\"modal\" onSubmit={submitHandler}>\r\n                   <h1>{langDate.createGood}</h1>\r\n                   <input className=\"create-input\" value={value} onChange={event => setValue(event.target.value)} />\r\n                   <div className=\"group-btn\">\r\n                       <button className=\"create-btn\" type=\"submit\">{langDate.addGood}</button>\r\n                       <button className=\"create-btn\" type=\"reset\" onClick={event => hideModal()}>{langDate.cancel}</button>\r\n                   </div>\r\n               </form>\r\n           </div>\r\n}\r\n\r\nexport default AddTodo","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from '../context'\r\n\r\nfunction TodoItem({todo, index}) {\r\n\r\n    let classes = []\r\n\r\n    const { removeTodo, toggleTodo } = React.useContext(Context)\r\n\r\n    if(todo.comlited) {\r\n        classes.push('done')\r\n    }\r\n\r\n    return <li className=\"delete-elem\">\r\n               <span className={classes.join('')}>\r\n                   <input id={todo.id} type='checkbox' onChange={toggleTodo.bind(null, todo.id)} checked={todo.comlited} />\r\n                   <label htmlFor={todo.id} />\r\n                   &nbsp;\r\n                   <strong>{++index})</strong>&nbsp;\r\n                   {todo.title}\r\n                   &nbsp;\r\n               </span>\r\n               <button className=\"delete-btn\" onClick={removeTodo.bind(null, todo.id)} >&times;</button>\r\n           </li>\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    index: PropTypes.number,\r\n    todo: PropTypes.object.isRequired\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoItem from './TodoItem'\r\n\r\nfunction TodoList(props) {\r\n\r\n    return(\r\n        <ul className=\"todo-item\">\r\n            {\r\n                props.todos.map( (todo, index) => {\r\n                    return <TodoItem todo={todo} index={index} key={todo.id}/>\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default TodoList\r\n\r\n","import React from 'react'\r\nimport Context from '../context'\r\n\r\nfunction ChangeLang(props) {\r\n\r\n    const { setLangLabel } = React.useContext(Context)\r\n\r\n    return <div className=\"lang-btn\">\r\n        {\r\n            props.langs.map( (el, index) =>\r\n                <button key={index} onClick={event => setLangLabel(el.toString())}>{el.toString()}</button>\r\n            )\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default ChangeLang","import React from 'react'\nimport Context from './context'\nimport AddTodo from './components/AddTodo'\nimport TodoList from './components/TodoList'\nimport ChangeLang from './components/ChangeLang'\n\nfunction App() {\n\n    const [classes, changeClass] = React.useState(['modal-wrapper'])\n\n    const [todos, setTodos] = React.useState(localStorage.getItem('date') ? JSON.parse(localStorage.getItem('date')) : [])\n\n    const [lang, setLang] = React.useState(localStorage.getItem('lang') ? localStorage.getItem('lang') : 'eng')\n\n    const langDate = {\n        \"eng\": {\n            \"cancel\": \"Cancel\",\n            \"addGood\": \"Add good\",\n            \"createGood\": \"Create good\",\n            \"addNewGoods\": \"Add goods\",\n            \"yourGoodsList\": \"Your list\",\n            \"deleteAllGoods\": \"Delete all\",\n            \"addInGoodsList\": \"Add goods\",\n        },\n        \"rus\": {\n            \"cancel\": \"Отмена\",\n            \"addGood\": \"Добавить товар\",\n            \"createGood\": \"Создать товар\",\n            \"addNewGoods\": \"Добавление\",\n            \"yourGoodsList\": \"Список\",\n            \"deleteAllGoods\": \"Удалить все\",\n            \"addInGoodsList\": \"Добавьте товары\",\n\n        }\n    }\n\n    function toggleTodo(id) {\n        setTodos(\n            todos.map(todo => {\n                if(todo.id === id) {\n                    todo.comlited = !todo.comlited\n                }\n                return todo\n            })\n        )\n    }\n\n    function removeTodo(id) {\n        setTodos(\n            todos.length !== 1 ? todos.filter(todo => todo.id !== id) : []\n        )\n    }\n\n    function addTodo(title) {\n        setTodos(\n            todos.concat([{\n                title,\n                id: Date.now(),\n                comlited: false\n            }])\n        )\n        hideModal()\n    }\n\n    function deleteAllTodos() {\n        setTodos([])\n        localStorage.clear()\n    }\n\n    function openModal() {\n        changeClass( classes.concat('active') )\n    }\n\n    function hideModal() {\n        changeClass( ['modal-wrapper'] )\n    }\n\n    function setLangLabel(lang) {\n        localStorage.setItem('lang', lang)\n        setLang(lang)\n    }\n\n    localStorage.setItem('date', JSON.stringify(todos))\n\n    return (\n            <Context.Provider value={{removeTodo, toggleTodo, addTodo, hideModal, setLangLabel}}>\n                <div className=\"App\">\n                    <ChangeLang langs={Object.keys(langDate)}/>\n                    <h1>{todos.length ? langDate[lang].yourGoodsList : langDate[lang].addInGoodsList}</h1>\n                    <TodoList todos={todos}/>\n                    <div className=\"group-btn\">\n                        { todos.length ?\n                            <button className=\"create-btn\" onClick={event => deleteAllTodos()}>\n                                {langDate[lang].deleteAllGoods}\n                            </button> :\n                            null\n                        }\n                        <button className=\"create-btn\" onClick={event => openModal()}>{langDate[lang].addNewGoods}</button>\n                    </div>\n                </div>\n                <AddTodo classes={classes} langDate={langDate[lang]} />\n            </Context.Provider>\n        );\n    }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}